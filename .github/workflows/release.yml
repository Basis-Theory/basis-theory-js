name: Release

on:
  push:
    branches: [ master ]

jobs:
  build-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [ '14.x' ]
        os: [ ubuntu-latest ]
    env:
      CI: 1 # prevents extra Cypress installation progress messages
      HUSKY: 0 # disables husky hooks
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SEMANTIC_RELEASE_PAT }}

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install deps (with cache)
        uses: bahmutov/npm-install@v1
        env:
          CYPRESS_INSTALL_BINARY: 0

      - name: Write .env
        run: make write-lib-vars
        env:
          ENVIRONMENT: prod

      - name: Build
        run: make build
        env:
          SKIP_INSTALL: 1 # install with cache was done already

      - name: Release
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_RELEASE_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.JS_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.JS_AWS_SECRET_ACCESS_KEY }}
          S3_CF_PROD_STATE: ${{ vars.S3_CF_PROD_STATE }}
          AWS_REGION: us-east-2
          ENVIRONMENT: prod

      - name: Dispatch integration tests run
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Verify
          repo: Basis-Theory/basis-theory-js-examples
          token: ${{ secrets.WORKFLOW_DISPATCH_TOKEN }}
          ref: master
          inputs: '{ "source": "Basis-Theory/basis-theory-js" }'

      - name: Purge cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_PROD_ZONE_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_PURGE_TOKEN }}
          PURGE_URLS: '["https://js.basistheory.com/*"]'

      - name: Slack Deploy / Release Alert
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          channel: ${{ secrets.SLACK_RELEASE_CHANNEL_ID }}
          fields: 'repo,commit,message,workflow,job'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
